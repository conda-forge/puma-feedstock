From 120a780e1c71d7c205a20418a6f6d5a0f34e3a04 Mon Sep 17 00:00:00 2001
From: Ataminos <mohamed.amine.mtb@gmail.com>
Date: Sat, 24 Dec 2022 14:16:37 +0100
Subject: [PATCH] Fixing issue #9 AttributeError: module 'numpy' has no
 attribute 'int'

---
 .../finite_volume/anisotropic_conductivity_utils.c          | 6 +++---
 .../finite_volume/anisotropic_conductivity_utils.pyx        | 2 +-
 .../pumapy/physics_models/finite_volume/elasticity_utils.c  | 6 +++---
 .../physics_models/finite_volume/elasticity_utils.pyx       | 2 +-
 .../finite_volume/isotropic_conductivity_utils.c            | 4 ++--
 .../finite_volume/isotropic_conductivity_utils.pyx          | 2 +-
 6 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.c b/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.c
index 9867196..d5186ae 100644
--- a/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.c
+++ b/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.c
@@ -1299,7 +1299,7 @@ typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
 
 /* "pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.pyx":6
  * np.import_array()
- * DTYPE = np.int
+ * DTYPE = np.int_
  * ctypedef np.int_t DTYPE_t             # <<<<<<<<<<<<<<
  * 
  * 
@@ -23309,7 +23309,7 @@ if (!__Pyx_RefNanny) {
  * cimport numpy as np
  * 
  * np.import_array()             # <<<<<<<<<<<<<<
- * DTYPE = np.int
+ * DTYPE = np.int_
  * ctypedef np.int_t DTYPE_t
  */
   __pyx_t_2 = __pyx_f_5numpy_import_array(); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 4, __pyx_L1_error)
@@ -23317,7 +23317,7 @@ if (!__Pyx_RefNanny) {
   /* "pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.pyx":5
  * 
  * np.import_array()
- * DTYPE = np.int             # <<<<<<<<<<<<<<
+ * DTYPE = np.int_             # <<<<<<<<<<<<<<
  * ctypedef np.int_t DTYPE_t
  * 
  */
diff --git a/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.pyx b/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.pyx
index 0a59d62..3cf732a 100644
--- a/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.pyx
+++ b/python/pumapy/physics_models/finite_volume/anisotropic_conductivity_utils.pyx
@@ -2,7 +2,7 @@ import numpy as np
 cimport numpy as np
 
 np.import_array()
-DTYPE = np.int
+DTYPE = np.int_
 ctypedef np.int_t DTYPE_t
 
 
diff --git a/python/pumapy/physics_models/finite_volume/elasticity_utils.c b/python/pumapy/physics_models/finite_volume/elasticity_utils.c
index ce30027..c30d39a 100644
--- a/python/pumapy/physics_models/finite_volume/elasticity_utils.c
+++ b/python/pumapy/physics_models/finite_volume/elasticity_utils.c
@@ -1299,7 +1299,7 @@ typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
 
 /* "pumapy/physics_models/finite_volume/elasticity_utils.pyx":6
  * np.import_array()
- * DTYPE = np.int
+ * DTYPE = np.int_
  * ctypedef np.int_t DTYPE_t             # <<<<<<<<<<<<<<
  * 
  * 
@@ -30275,7 +30275,7 @@ if (!__Pyx_RefNanny) {
  * cimport numpy as np
  * 
  * np.import_array()             # <<<<<<<<<<<<<<
- * DTYPE = np.int
+ * DTYPE = np.int_
  * ctypedef np.int_t DTYPE_t
  */
   __pyx_t_2 = __pyx_f_5numpy_import_array(); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 4, __pyx_L1_error)
@@ -30283,7 +30283,7 @@ if (!__Pyx_RefNanny) {
   /* "pumapy/physics_models/finite_volume/elasticity_utils.pyx":5
  * 
  * np.import_array()
- * DTYPE = np.int             # <<<<<<<<<<<<<<
+ * DTYPE = np.int_             # <<<<<<<<<<<<<<
  * ctypedef np.int_t DTYPE_t
  * 
  */
diff --git a/python/pumapy/physics_models/finite_volume/elasticity_utils.pyx b/python/pumapy/physics_models/finite_volume/elasticity_utils.pyx
index 8fe9af8..2e2f92a 100644
--- a/python/pumapy/physics_models/finite_volume/elasticity_utils.pyx
+++ b/python/pumapy/physics_models/finite_volume/elasticity_utils.pyx
@@ -2,7 +2,7 @@ import numpy as np
 cimport numpy as np
 
 np.import_array()
-DTYPE = np.int
+DTYPE = np.int_
 ctypedef np.int_t DTYPE_t
 
 
diff --git a/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.c b/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.c
index 1228be2..d1bd00f 100644
--- a/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.c
+++ b/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.c
@@ -26253,7 +26253,7 @@ if (!__Pyx_RefNanny) {
  * import numpy as np
  * import sys             # <<<<<<<<<<<<<<
  * 
- * DTYPE = np.float
+ * DTYPE = np.float64
  */
   __pyx_t_1 = __Pyx_Import(__pyx_n_s_sys, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -26263,7 +26263,7 @@ if (!__Pyx_RefNanny) {
   /* "pumapy/physics_models/finite_volume/isotropic_conductivity_utils.pyx":4
  * import sys
  * 
- * DTYPE = np.float             # <<<<<<<<<<<<<<
+ * DTYPE = np.float64             # <<<<<<<<<<<<<<
  * 
  * 
  */
diff --git a/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.pyx b/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.pyx
index 7adc574..27ff86d 100644
--- a/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.pyx
+++ b/python/pumapy/physics_models/finite_volume/isotropic_conductivity_utils.pyx
@@ -1,7 +1,7 @@
 import numpy as np
 import sys
 
-DTYPE = np.float
+DTYPE = np.float64
 
 
 def index_at_p(int i, int j, int k, int len_x, int len_y, int len_z):
